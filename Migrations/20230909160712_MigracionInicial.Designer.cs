// <auto-generated />
using System;
using ComponentesMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComponentesMVC.Migrations
{
    [DbContext(typeof(TiendaOrdenadoresContext))]
    [Migration("20230909160712_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComponentesMVC.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calor")
                        .HasColumnType("float");

                    b.Property<int?>("Cores")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Gigas")
                        .HasColumnType("float");

                    b.Property<string>("NumSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenadorId")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Componentes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calor = 10.0,
                            Cores = 9,
                            Descripcion = "Procesador Intel i7",
                            Gigas = 0.0,
                            NumSerie = "789_XCS",
                            OrdenadorId = 2,
                            Precio = 134.0,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            Calor = 12.0,
                            Cores = 10,
                            Descripcion = "Procesador Intel i7",
                            Gigas = 0.0,
                            NumSerie = "789_XCD",
                            OrdenadorId = 1,
                            Precio = 138.0,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 3,
                            Calor = 22.0,
                            Cores = 11,
                            Descripcion = "Procesador Intel i7",
                            Gigas = 0.0,
                            NumSerie = "789_XCT",
                            OrdenadorId = 1,
                            Precio = 138.0,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 4,
                            Calor = 10.0,
                            Cores = 0,
                            Descripcion = "Banco de memoria SDRAM",
                            Gigas = 512.0,
                            NumSerie = "879FH",
                            OrdenadorId = 2,
                            Precio = 100.0,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 5,
                            Calor = 15.0,
                            Cores = 0,
                            Descripcion = "Banco de memoria SDRAM",
                            Gigas = 1024.0,
                            NumSerie = "879FH_L",
                            OrdenadorId = 1,
                            Precio = 125.0,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 6,
                            Calor = 24.0,
                            Cores = 0,
                            Descripcion = "Banco de memoria SDRAM",
                            Gigas = 2028.0,
                            NumSerie = "879FH_T",
                            OrdenadorId = 1,
                            Precio = 150.0,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 7,
                            Calor = 10.0,
                            Cores = 0,
                            Descripcion = "Disco Duro Scan Disk",
                            Gigas = 500000.0,
                            NumSerie = "789_XX",
                            OrdenadorId = 2,
                            Precio = 50.0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 8,
                            Calor = 29.0,
                            Cores = 0,
                            Descripcion = "Disco Duro Scan Disk",
                            Gigas = 1000000.0,
                            NumSerie = "789_XX_2",
                            OrdenadorId = 1,
                            Precio = 90.0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 9,
                            Calor = 39.0,
                            Cores = 0,
                            Descripcion = "Disco Duro Scan Disk",
                            Gigas = 2000000.0,
                            NumSerie = "789_XX_3",
                            OrdenadorId = 1,
                            Precio = 128.0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 10,
                            Calor = 30.0,
                            Cores = 10,
                            Descripcion = "Procesador Ryzen AMD",
                            Gigas = 0.0,
                            NumSerie = "797-X",
                            OrdenadorId = 1,
                            Precio = 78.0,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 11,
                            Calor = 30.0,
                            Cores = 29,
                            Descripcion = "Procesador Ryzen AMD",
                            Gigas = 0.0,
                            NumSerie = "797-X-2",
                            OrdenadorId = 1,
                            Precio = 178.0,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 12,
                            Calor = 60.0,
                            Cores = 34,
                            Descripcion = "Procesador Ryzen AMD",
                            Gigas = 0.0,
                            NumSerie = "797-X-3",
                            OrdenadorId = 1,
                            Precio = 278.0,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 13,
                            Calor = 35.0,
                            Cores = 0,
                            Descripcion = "Disco Mecanico Patatin",
                            Gigas = 250.0,
                            NumSerie = "788-fg",
                            OrdenadorId = 1,
                            Precio = 37.0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 14,
                            Calor = 35.0,
                            Cores = 0,
                            Descripcion = "Disco Mecanico Patatin",
                            Gigas = 250.0,
                            NumSerie = "788-fg-2",
                            OrdenadorId = 1,
                            Precio = 67.0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 15,
                            Calor = 35.0,
                            Cores = 0,
                            Descripcion = "Disco Mecanico Patatin",
                            Gigas = 250.0,
                            NumSerie = "788-fg-3",
                            OrdenadorId = 1,
                            Precio = 97.0,
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("ComponentesMVC.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Precio")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Facturas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Factura 1",
                            Precio = 0.0
                        });
                });

            modelBuilder.Entity("ComponentesMVC.Models.Ordenador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<double?>("Precio")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Ordenadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Almacén de componentes",
                            PedidoId = 0,
                            Precio = 0.0
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Ordenador de María",
                            PedidoId = 1,
                            Precio = 0.0
                        });
                });

            modelBuilder.Entity("ComponentesMVC.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacturaId")
                        .HasColumnType("int");

                    b.Property<double?>("Precio")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Pedido 1",
                            FacturaId = 1,
                            Precio = 0.0
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Pedido 2",
                            FacturaId = 1,
                            Precio = 0.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
